// Code generated by MockGen. DO NOT EDIT.
// Source: assets.go

// Package assets is a generated GoMock package.
package assets

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockAssets is a mock of Assets interface.
type MockAssets struct {
	ctrl     *gomock.Controller
	recorder *MockAssetsMockRecorder
}

// MockAssetsMockRecorder is the mock recorder for MockAssets.
type MockAssetsMockRecorder struct {
	mock *MockAssets
}

// NewMockAssets creates a new mock instance.
func NewMockAssets(ctrl *gomock.Controller) *MockAssets {
	mock := &MockAssets{ctrl: ctrl}
	mock.recorder = &MockAssetsMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAssets) EXPECT() *MockAssetsMockRecorder {
	return m.recorder
}

// GetFrom mocks base method.
func (m *MockAssets) GetFrom(assets string) []Metadata {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFrom", assets)
	ret0, _ := ret[0].([]Metadata)
	return ret0
}

// GetFrom indicates an expected call of GetFrom.
func (mr *MockAssetsMockRecorder) GetFrom(assets interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFrom", reflect.TypeOf((*MockAssets)(nil).GetFrom), assets)
}

// NamedTemplate mocks base method.
func (m *MockAssets) NamedTemplate(path string) bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NamedTemplate", path)
	ret0, _ := ret[0].(bool)
	return ret0
}

// NamedTemplate indicates an expected call of NamedTemplate.
func (mr *MockAssetsMockRecorder) NamedTemplate(path interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NamedTemplate", reflect.TypeOf((*MockAssets)(nil).NamedTemplate), path)
}

// ValidStateName mocks base method.
func (m *MockAssets) ValidStateName(path string) bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidStateName", path)
	ret0, _ := ret[0].(bool)
	return ret0
}

// ValidStateName indicates an expected call of ValidStateName.
func (mr *MockAssetsMockRecorder) ValidStateName(path interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidStateName", reflect.TypeOf((*MockAssets)(nil).ValidStateName), path)
}
