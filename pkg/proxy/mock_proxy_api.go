// Code generated by MockGen. DO NOT EDIT.
// Source: proxy.go

// Package proxy is a generated GoMock package.
package proxy

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	unstructured "k8s.io/apimachinery/pkg/apis/meta/v1/unstructured"
)

// MockProxyAPI is a mock of ProxyAPI interface.
type MockProxyAPI struct {
	ctrl     *gomock.Controller
	recorder *MockProxyAPIMockRecorder
}

// MockProxyAPIMockRecorder is the mock recorder for MockProxyAPI.
type MockProxyAPIMockRecorder struct {
	mock *MockProxyAPI
}

// NewMockProxyAPI creates a new mock instance.
func NewMockProxyAPI(ctrl *gomock.Controller) *MockProxyAPI {
	mock := &MockProxyAPI{ctrl: ctrl}
	mock.recorder = &MockProxyAPIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockProxyAPI) EXPECT() *MockProxyAPIMockRecorder {
	return m.recorder
}

// ClusterConfiguration mocks base method.
func (m *MockProxyAPI) ClusterConfiguration(ctx context.Context) (Configuration, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ClusterConfiguration", ctx)
	ret0, _ := ret[0].(Configuration)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ClusterConfiguration indicates an expected call of ClusterConfiguration.
func (mr *MockProxyAPIMockRecorder) ClusterConfiguration(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ClusterConfiguration", reflect.TypeOf((*MockProxyAPI)(nil).ClusterConfiguration), ctx)
}

// Setup mocks base method.
func (m *MockProxyAPI) Setup(ctx context.Context, obj *unstructured.Unstructured) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Setup", ctx, obj)
	ret0, _ := ret[0].(error)
	return ret0
}

// Setup indicates an expected call of Setup.
func (mr *MockProxyAPIMockRecorder) Setup(ctx, obj interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Setup", reflect.TypeOf((*MockProxyAPI)(nil).Setup), ctx, obj)
}
