// Code generated by MockGen. DO NOT EDIT.
// Source: wrapper.go

// Package registry is a generated GoMock package.
package registry

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	v1 "github.com/google/go-containerregistry/pkg/v1"
)

// MockCraneWrapper is a mock of CraneWrapper interface.
type MockCraneWrapper struct {
	ctrl     *gomock.Controller
	recorder *MockCraneWrapperMockRecorder
}

// MockCraneWrapperMockRecorder is the mock recorder for MockCraneWrapper.
type MockCraneWrapperMockRecorder struct {
	mock *MockCraneWrapper
}

// NewMockCraneWrapper creates a new mock instance.
func NewMockCraneWrapper(ctrl *gomock.Controller) *MockCraneWrapper {
	mock := &MockCraneWrapper{ctrl: ctrl}
	mock.recorder = &MockCraneWrapperMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCraneWrapper) EXPECT() *MockCraneWrapperMockRecorder {
	return m.recorder
}

// Manifest mocks base method.
func (m *MockCraneWrapper) Manifest(arg0 context.Context, arg1 string) ([]byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Manifest", arg0, arg1)
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Manifest indicates an expected call of Manifest.
func (mr *MockCraneWrapperMockRecorder) Manifest(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Manifest", reflect.TypeOf((*MockCraneWrapper)(nil).Manifest), arg0, arg1)
}

// PullLayer mocks base method.
func (m *MockCraneWrapper) PullLayer(arg0 context.Context, arg1 string) (v1.Layer, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PullLayer", arg0, arg1)
	ret0, _ := ret[0].(v1.Layer)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// PullLayer indicates an expected call of PullLayer.
func (mr *MockCraneWrapperMockRecorder) PullLayer(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PullLayer", reflect.TypeOf((*MockCraneWrapper)(nil).PullLayer), arg0, arg1)
}
