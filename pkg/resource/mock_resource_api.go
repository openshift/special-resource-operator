// Code generated by MockGen. DO NOT EDIT.
// Source: resource.go

// Package resource is a generated GoMock package.
package resource

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// MockCreator is a mock of Creator interface.
type MockCreator struct {
	ctrl     *gomock.Controller
	recorder *MockCreatorMockRecorder
}

// MockCreatorMockRecorder is the mock recorder for MockCreator.
type MockCreatorMockRecorder struct {
	mock *MockCreator
}

// NewMockCreator creates a new mock instance.
func NewMockCreator(ctrl *gomock.Controller) *MockCreator {
	mock := &MockCreator{ctrl: ctrl}
	mock.recorder = &MockCreatorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCreator) EXPECT() *MockCreatorMockRecorder {
	return m.recorder
}

// CreateFromYAML mocks base method.
func (m *MockCreator) CreateFromYAML(arg0 context.Context, arg1 []byte, arg2 bool, arg3 v1.Object, arg4, arg5 string, arg6 map[string]string, arg7, arg8 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateFromYAML", arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateFromYAML indicates an expected call of CreateFromYAML.
func (mr *MockCreatorMockRecorder) CreateFromYAML(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateFromYAML", reflect.TypeOf((*MockCreator)(nil).CreateFromYAML), arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8)
}
