apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{.Values.specialresource.metadata.name}}-licensing-controller

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{.Values.specialresource.metadata.name}}-licensing-controller
rules:
  {{- if eq .Values.runArgs.platform "openshift-container-platform" }}
  - apiGroups:
    - security.openshift.io
    resources:
    - securitycontextconstraints
    verbs:
    - use
    resourceNames:
    - {{.Values.specialresource.metadata.name}}-licensing-controller
  {{- end }}
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["get", "list"]
---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{.Values.specialresource.metadata.name}}-licensing-controller
roleRef:
  kind: ClusterRole
  name: {{.Values.specialresource.metadata.name}}-licensing-controller
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: {{.Values.specialresource.metadata.name}}-licensing-controller
  namespace: {{.Values.specialresource.spec.namespace}}

---

{{- if eq .Values.runArgs.platform "openshift-container-platform" }}
allowHostDirVolumePlugin: false
allowHostIPC: false
allowHostNetwork: false
allowHostPID: false
allowHostPorts: false
allowPrivilegedContainer: false
allowedCapabilities: null
apiVersion: security.openshift.io/v1
defaultAddCapabilities: null
fsGroup:
  type: RunAsAny
groups: []
kind: SecurityContextConstraints
metadata:
  annotations:
    kubernetes.io/description: Custom SCC
    release.openshift.io/create-only: "true"
  name: {{.Values.specialresource.metadata.name}}-licensing-controller
priority: null
readOnlyRootFilesystem: false
requiredDropCapabilities: null
runAsUser:
  type: MustRunAs
  uid: 1005
seLinuxContext:
  type: RunAsAny
supplementalGroups:
  type: RunAsAny
users:
- system:serviceaccount:{{.Values.specialresource.spec.namespace}}:{{.Values.specialresource.metadata.name}}-licensing-controller

---
{{- end }}


apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: {{.Values.specialresource.metadata.name}}-licensing-controller
  name: {{.Values.specialresource.metadata.name}}-licensing-controller
  annotations:
    specialresource.openshift.io/wait: "true"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{.Values.specialresource.metadata.name}}-licensing-controller
  template:
    metadata:
      labels:
        app: {{.Values.specialresource.metadata.name}}-licensing-controller
    spec:
      serviceAccount: {{.Values.specialresource.metadata.name}}-licensing-controller
      serviceAccountName: {{.Values.specialresource.metadata.name}}-licensing-controller
      containers:
        - name: {{.Values.specialresource.metadata.name}}-licensing-controller
          image: {{.Values.runArgs.infoscaleLicImage}}-{{.Values.operatingSystemMajor}}
          securityContext:
            runAsUser: 1005
          imagePullPolicy: {{.Values.runArgs.infoscaleLicImgPullPolicy}}
          command: [ "/sbin/lic-entrypoint.sh" ]
          args:
          - "--hostname={{.Values.runArgs.licServer}}"
          - "--port={{.Values.runArgs.licPort}}"
          - "--uuid={{.Values.runArgs.licUUID}}"
          env:
            - name: product_version
              value: "{{.Values.runArgs.infoscaleVersion}}"
          readinessProbe:
            exec:
              command: [ "/bin/sh", "-c", "/opt/VRTSvlic/tele/bin/TelemetryCollector -status | grep 'Running'" ]
            initialDelaySeconds: 30
            periodSeconds: 45
            timeoutSeconds: 5
      nodeSelector:
        {{.Values.node.selector}}: "true"
